version: "3.2"

services:
  db:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: 'g2'
      POSTGRES_USER: 'senzing'
      POSTGRES_PASSWORD: 'senzing'
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "./postgres-data:/var/lib/postgresql/data/pgdata"
      - "./postgres_init:/docker-entrypoint-initdb.d"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5432:5432"
    command: postgres -c synchronous_commit=off -c wal_writer_delay=1000 -c max_connections=5000
    env_file:
      - conf/senzing.dev.env
    logging:
      options:
        max-size: 10m

  rabbitmq3:
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: senzing
      RABBITMQ_DEFAULT_PASS: senzing
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    logging:
      driver: none
    env_file:
      - conf/senzing.dev.env

  api:
    build:
      context: .
    command: gunicorn --workers 2 --timeout 300 --bind 0.0.0.0:8888 app:app --reload
    ports:
      - "8888:8888"
    volumes:
      - ./:/senzing
      - "/etc/localtime:/etc/localtime:ro"
    restart: on-failure
    depends_on:
      - db
    env_file:
      - conf/senzing.dev.env


  loader:
    build:
      context: .
    command: python3 -u load_worker.py
    depends_on:
      - rabbitmq3
      - db
    volumes:
      - ./:/senzing
      - "/etc/localtime:/etc/localtime:ro"
    env_file:
      - conf/senzing.dev.env


  redo:
    build:
      context: .
    command: python3 -u redo_worker.py
    depends_on:
      - db
    volumes:
      - ./:/senzing
      - "/etc/localtime:/etc/localtime:ro"
    env_file:
      - conf/senzing.dev.env

volumes:
  postgres-data: {}
